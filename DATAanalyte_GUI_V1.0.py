# -*- coding: utf-8 -*-
"""
Created on Tue Mar  2 17:29:27 2021

@author: Administrator
"""
import os
os.getcwd()
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
plt.rcParams['font.sans-serif']=['SimHei']
plt.rcParams['axes.unicode_minus'] = False
import warnings 
warnings.filterwarnings("ignore")
import PySimpleGUI as sg

def function1():
    X=pd.read_excel("Input.xlsx")
    A=pd.read_excel("Inhouse_database.xlsx",sheet_name="1H_NMR")
    a=len(X)
    d=pd.DataFrame(np.array([None for i in range(2*A.shape[1]*A.shape[0])]).reshape(A.shape[0],2*A.shape[1]))

    for k in range(A.shape[1]):
        X=pd.read_excel("Input.xlsx")
        vars()["x"+str(k)]=X
        m=0
        for i in range(A.shape[0]):
            for j in list(vars()["x"+str(k)].index):
                if (abs(A.iloc[i,k]-vars()["x"+str(k)].loc[j,["X"]]["X"])<=0.05) :
                    try:
                        d.iloc[m,2*k+1]=A.iloc[i,k]#A
                        d.iloc[m,2*k]=vars()["x"+str(k)].loc[j,["X"]]["X"]
                        vars()["x"+str(k)]=vars()["x"+str(k)].drop(j)
                        m=m+1
                    except:
                        pass   
                    break 
                    
        vars()["x"+str(k)].index=range(len(vars()["x"+str(k)]))
    name=[]
    for i in range(A.shape[1]):
        name.append("".join(("X",str(i+1))))
        name.append("".join(("Type",str(i+1))))   
    d.columns=name
    si=[]
    for i in range(A.shape[1]):
        Y1=pd.read_excel("Input.xlsx")
        Y=Y1.iloc[:,0].tolist()
        si.append((len(Y)-len(vars()["x"+str(i)].iloc[:,0]))/len(A.iloc[:,i].dropna()))
    d.to_excel("hit.xlsx",index=False)
    si=pd.DataFrame(si)
    si.columns=["Similarity"]
    si.to_excel("Similarity.xlsx")
    si.index=A.columns
    si=si.sort_values(["Similarity"]).iloc[-10:,]
    ax = plt.figure(figsize=(10,3.5)).add_subplot(111)
    plt.bar(si.index,si.Similarity) 
    ax.set_xlabel('COM', fontsize=12)
    ax.set_ylabel('Similarity', fontsize=12)
    ax.set_title('Top 10 compounds that may be present in the mixture', size=12)
    plt.xticks(fontsize=12)
    plt.yticks(fontsize=12)
    plt.savefig(r'.\result_figure.png')
    return(si,d)

def function2():
    expelt=pd.read_excel("Input.xlsx")
    CDEPTdata=pd.read_excel("Inhouse_database.xlsx",sheet_name="C_DEPT_NMR")
    a=len(expelt)
    A1=CDEPTdata.iloc[:,[i%2==0 for i in range(len(CDEPTdata.columns))]]
    X1=expelt.iloc[:,0]
    A1.to_excel("CDEPTdata.xlsx",index=False)
    X1.to_excel("expeltdata.xlsx",index=False)
    X=pd.read_excel("expeltdata.xlsx")
    A=pd.read_excel("CDEPTdata.xlsx")
    a=len(X)
    d=pd.DataFrame(np.array([None for i in range(2*A.shape[1]*A.shape[0])]).reshape(A.shape[0],2*A.shape[1]))
    for k in range(A.shape[1]):
        X=pd.read_excel("expeltdata.xlsx")
        vars()["x"+str(k)]=X
        m=0
        for i in range(A.shape[0]):
            for j in list(vars()["x"+str(k)].index):
                if (abs(A.iloc[i,k]-vars()["x"+str(k)].loc[j,["X"]]["X"])<=0.5) :
                    try:
                        d.iloc[m,2*k+1]=A.iloc[i,k]#A
                        d.iloc[m,2*k]=vars()["x"+str(k)].loc[j,["X"]]["X"]
                        vars()["x"+str(k)]=vars()["x"+str(k)].drop(j)
                        m=m+1
                    except:
                        pass   
                    break 
        vars()["x"+str(k)].index=range(len(vars()["x"+str(k)]))
    name=[]
    for i in range(A.shape[1]):
        name.append("".join(("X",str(i+1))))
        name.append("".join(("COM",str(i+1))))   
    d.columns=name
    si=[]
    for i in range(A.shape[1]):
        Y1=pd.read_excel("expeltdata.xlsx")
        Y=Y1.iloc[:,0].tolist()
        si.append((len(Y)-len(vars()["x"+str(i)].iloc[:,0]))/len(A.iloc[:,i].dropna()))
    d.to_excel("hit.xlsx",index=False)
    si=pd.DataFrame(si)
    si.columns=["Similarity"]
    si.to_excel("Similarity.xlsx")
    si.index=A.columns
    si=si.sort_values(["Similarity"]).iloc[-10:,]
    ax = plt.figure(figsize=(10,3.5)).add_subplot(111)
    plt.bar(si.index,si.Similarity) 
    ax.set_xlabel('COM', fontsize=12)
    ax.set_ylabel('Similarity', fontsize=12)
    ax.set_title('Top 10 compounds that may be present in the mixture', size=12)
    plt.xticks(fontsize=12)
    plt.yticks(fontsize=12)
    plt.savefig(r'.\result_figure.png')
    return(si,d)

def function3():
    X=pd.read_excel("Inhouse_database.xlsx")
    A=pd.read_excel("Inhouse_database.xlsx",sheet_name="C_DEPT_NMR")
    a=len(X)
    A1=A.iloc[:,[i%2==0 for i in range(len(A.columns))]]
    A2=A.iloc[:,[i%2==1 for i in range(len(A.columns))]]
    X1=X.iloc[:,0]
    X2=X.iloc[:,1]
    d=pd.DataFrame(np.array([None for i in range(3*A1.shape[1]*A1.shape[0])]).reshape(A.shape[0],3*A1.shape[1]))

    for k in range(int(A.shape[1]/2)):
        X=pd.read_excel("Inhouse_database.xlsx")
        vars()["x"+str(k)]=X
        m=0
        for i in range(A.shape[0]):
            for j in list(vars()["x"+str(k)].index):
                if (abs(A1.iloc[i,k]-vars()["x"+str(k)].loc[j,["X"]])<=0.5)["X"] and A2.iloc[i,k]==vars()["x"+str(k)].loc[j,["X.1"]]["X.1"]:
                    try:
                        d.iloc[m,3*k+1]=A1.iloc[i,k]#A
                        d.iloc[m,3*k]=vars()["x"+str(k)].loc[j,["X"]]["X"]
                        d.iloc[m,3*k+2]=vars()["x"+str(k)].loc[j,["X.1"]]["X.1"]
                        vars()["x"+str(k)]=vars()["x"+str(k)].drop(j)
                        m=m+1
                    except:
                        pass   
                    break 
        vars()["x"+str(k)].index=range(len(vars()["x"+str(k)]))
    name=[]
    for i in range(A1.shape[1]):
        name.append("".join(("X",str(i+1))))
        name.append("".join(("COM",str(i+1)))) 
        name.append("".join(("Com",str(i+1))))
    d.columns=name
    si=[]
    for i in range(int(A.shape[1]/2)):
        Y1=pd.read_excel("Inhouse_database.xlsx")
        Y=Y1.iloc[:,0].tolist()
        Z=Y1.iloc[:,1].tolist()
        si.append((len(Y)-len(vars()["x"+str(i)].iloc[:,0]))/len(A1.iloc[:,i].dropna()))
    d.to_excel("hit_13CDEPTNMR.xlsx")
    si=pd.DataFrame(si)
    si.columns=["Similarity_13CDEPTNMR"]
    si.index=A1.columns
    si=si.sort_values(["Similarity_13CDEPTNMR"]).iloc[-10:,]
    ax = plt.figure(figsize=(10,3.5)).add_subplot(111)
    plt.bar(si.index,si.Similarity_13CDEPTNMR) 
    ax.set_xlabel('COM', fontsize=12)
    ax.set_ylabel('Similarity', fontsize=12)
    ax.set_title('Top 10 compounds that may be present in the mixture', size=12)
    plt.xticks(fontsize=12)
    plt.yticks(fontsize=12)
    plt.savefig(r'.\result_figure.png')
    return(si,d)

def function4():
    X=pd.read_excel("Input.xlsx")
    A=pd.read_excel("Inhouse_database.xlsx",sheet_name="UV_max")
    a=len(X)
    d=pd.DataFrame(np.array([None for i in range(2*A.shape[1]*A.shape[0])]).reshape(A.shape[0],2*A.shape[1]))

    for k in range(A.shape[1]):
        X=pd.read_excel("Input.xlsx")
        vars()["x"+str(k)]=X
        m=0
        for i in range(A.shape[0]):
            for j in list(vars()["x"+str(k)].index):
                if (abs(A.iloc[i,k]-vars()["x"+str(k)].loc[j,["X"]]["X"])<=7) :
                    try:
                        d.iloc[m,2*k+1]=A.iloc[i,k]#A
                        d.iloc[m,2*k]=vars()["x"+str(k)].loc[j,["X"]]["X"]
                        vars()["x"+str(k)]=vars()["x"+str(k)].drop(j)
                        m=m+1
                    except:
                        pass   
                    break 
        vars()["x"+str(k)].index=range(len(vars()["x"+str(k)]))
    name=[]
    for i in range(A.shape[1]):
        name.append("".join(("X",str(i+1))))
        name.append("".join(("COM",str(i+1))))   
    d.columns=name
    si=[]
    for i in range(A.shape[1]):
        Y1=pd.read_excel("Input.xlsx")
        Y=Y1.iloc[:,0].tolist()
        si.append((len(Y)-len(vars()["x"+str(i)].iloc[:,0]))/len(A.iloc[:,i].dropna()))
    d.to_excel("hit.xlsx",index=False)
    si=pd.DataFrame(si)
    si.columns=["Similarity"]
    si.to_excel("Similarity.xlsx")
    si.index=A.columns
    si=si.sort_values(["Similarity"]).iloc[-10:,]
    ax = plt.figure(figsize=(10,3.5)).add_subplot(111)
    plt.bar(si.index,si.Similarity) 
    ax.set_xlabel('COM', fontsize=12)
    ax.set_ylabel('Similarity', fontsize=12)
    ax.set_title('Top 10 compounds that may be present in the mixture', size=12)
    plt.xticks(fontsize=12)
    plt.yticks(fontsize=12)
    plt.savefig(r'.\result_figure.png')
    return(si,d)

def function5():
    X=pd.read_excel("Input.xlsx")
    A=pd.read_excel("Inhouse_database.xlsx",sheet_name="Molecular_weight")
    a=len(X)
    d=pd.DataFrame(np.array([None for i in range(2*A.shape[1]*A.shape[0])]).reshape(A.shape[0],2*A.shape[1]))

    for k in range(A.shape[1]):
        X=pd.read_excel("Input.xlsx")
        vars()["x"+str(k)]=X
        m=0
        for i in range(A.shape[0]):
            for j in list(vars()["x"+str(k)].index):
                if (abs(A.iloc[i,k]-vars()["x"+str(k)].loc[j,["X"]]["X"])<=7) :
                    try:
                        d.iloc[m,2*k+1]=A.iloc[i,k]#A
                        d.iloc[m,2*k]=vars()["x"+str(k)].loc[j,["X"]]["X"]
                        vars()["x"+str(k)]=vars()["x"+str(k)].drop(j)
                        m=m+1
                    except:
                        pass   
                    break 
        vars()["x"+str(k)].index=range(len(vars()["x"+str(k)]))
    name=[]
    for i in range(A.shape[1]):
        name.append("".join(("X",str(i+1))))
        name.append("".join(("COM",str(i+1))))   
    d.columns=name
    si=[]
    for i in range(A.shape[1]):
        Y1=pd.read_excel("Input.xlsx")
        Y=Y1.iloc[:,0].tolist()
        si.append((len(Y)-len(vars()["x"+str(i)].iloc[:,0]))/len(A.iloc[:,i].dropna()))
    d.to_excel("hit.xlsx",index=False)
    si=pd.DataFrame(si)
    si.columns=["Similarity"]
    si.to_excel("Similarity.xlsx")
    si.index=A.columns
    si=si.sort_values(["Similarity"]).iloc[-10:,]
    ax = plt.figure(figsize=(10,3.5)).add_subplot(111)
    plt.bar(si.index,si.Similarity) 
    ax.set_xlabel('COM', fontsize=12)
    ax.set_ylabel('Similarity', fontsize=12)
    ax.set_title('Top 10 compounds that may be present in the mixture', size=12)
    plt.xticks(fontsize=12)
    plt.yticks(fontsize=12)
    plt.savefig(r'.\result_figure.png')
    return(si,d)

#图形化界面部分
pw="123456"
for i in range(1000000000):
    result1=sg.PopupGetText("Please enter your password:",title="DATAanalyte",
                            password_char="*",font=("Arial",12))
    if result1==pw:
        break
    elif result1==None:
        exit()
    else:
        sg.popup("Wrong password, please re-enter!",font=("Arial",12))

sg.set_options(font=('',15))

ͼƬ1 = b'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'
ͼƬ2 = b'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'
ͼƬ3 = b'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'
ͼƬ4 = b'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'
ͼƬ5 = b'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'
ͼƬ6 = b'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'
ͼƬ7 = b''
ͼƬ8 = b''
ͼƬ9 = b''
sg.theme("DarkBrown")
menu_def=[
    ['File','open file::openkey'],
    ['Edit','edit1'],
    ['Help','about']
     ]


fra1_layout=[ [sg.B('Next Step',key='NEXT1',disabled=True,visible=True,font=("Arial",12))],
        [sg.Text('Please enter the spectral data, separated by ",", ending with "," : ', size=(60,2),font=("Arial",12))],
        [sg.Multiline (size=(60,4),key=('-INPUT-'),tooltip="例如：12.3,18.1,24.5,123.1....",font=("Arial",12))],
        
       [sg.Image(data=ͼƬ1),sg.Image(data=ͼƬ6),sg.Image(data=ͼƬ8)],
       [sg.B("Submit",key='-SUBMIT-',font=("Arial",12))]]

fra2_layout=[
             [sg.Text("Method Selection",key='SELECT', visible=True,font=("Arial",12))],
             [sg.B(' 1HNMR ',font=("Arial",12)),sg.Image(data=ͼƬ2),sg.B(' 13CNMR',font=("Arial",12)),sg.Image(data=ͼƬ3)],
             [sg.B(' UVMAX ',font=("Arial",12)),sg.Image(data=ͼƬ4),sg.B('  MW   ',font=("Arial",12)),sg.Image(data=ͼƬ5)],
             [sg.B("Last Step",key='-LAST-',button_color=('black','green'),font=("Arial",12)),sg.B('Result',key='-RESULT-',
             button_color=('black','grey'),disabled=True,font=("Arial",12))]
             ]
fra3_layout=[
         [sg.T("Compound",font=("Arial",12),pad=((10,80),(1,1))),sg.T("Explt_Hit",pad=((10,40),(1,1)),font=("Arial",12)),
          sg.T("Database_Hit",font=("Arial",12),pad=((10,120),(1,1))),sg.T('Structure',font=("Arial",12))],
         [sg.LB(list(range(100)),size=(10,6),pad=((10,40),(1,1)),key='-SIM_LIST-',enable_events=True),
          sg.LB(list(range(100)),size=(10,6),key='-EXPLT_HIT-',enable_events=False),
          sg.LB(list(range(100)),size=(10,6),pad=((1,60),(1,1)),key='-LIB_HIT-',enable_events=False),
          sg.Image(filename=r"./H_type/H_type1.png",background_color=("lightskyblue"))],
         [sg.T("Hit Score:",font=("Arial",12)),sg.In(size=(8,1),key='-SCORE-',background_color=("green"))
          ],
         [sg.T("Top 10 compounds with the highest hit score:",font=("Arial",12))],
         [sg.Image(filename=(r"./result_plot.png"),key='-RESULT_PLOT-')]]
layout=[[sg.Menu(menu_def)]
        
        ]+\
        [  [sg.Frame(title='STEP1',layout=fra1_layout,visible=True,
                            key='-FRAME1-'),
              sg.Frame(title='STEP2',layout=fra2_layout,visible=False,
                         key='-FRAME2-'),
            sg.Frame(title='STEP3',layout=fra3_layout,
                        visible=False,key='-FRAME3-',size=(100,300))  ]]

window=sg.Window('DATAanalyte',layout,keep_on_top=True,resizable=True)

result=False

while True:
    event,values=window.read()
    print(event)   
    if event==None:  
        break
    if event=="-SUBMIT-":
# =============================================================================
#         list=["X"]
# =============================================================================
        window['NEXT1'].update(visible=True,disabled=False)
        Inputdata=values["-INPUT-"]
        list1 = Inputdata.split(',')
        list2=list1[:-1]
# =============================================================================
#         list.extend(list1)
# =============================================================================
        c={"X":list2}
        Inputdata=pd.DataFrame(c)
        print(Inputdata)
        Inputdata.to_excel("Input.xlsx",sheet_name="X",index=False)
    if event=='NEXT1':
        window['-FRAME1-'].update(visible=False)
        window['NEXT1'].update(visible=False)
        window['-FRAME2-'].update(visible=True)
        window['-FRAME3-'].update(visible=False)
        window['-SUBMIT-'].update(visible=False)
    if event==' 1HNMR ':
         try:
             sg.popup('Analyzing, this process will take a few minutes!',keep_on_top=True,
                      auto_close=True,auto_close_duration=5)
             print(function1())
             sg.popup('Mission Accomplished!',keep_on_top=True,title="DATAanalyte", 
             custom_text=("cancel"),image=ͼƬ9)
             window['-RESULT-'].update(disabled=False, button_color=('black','green'))
         except Exception as e:
             sg.popup(e)
    if event==' 13CNMR':
         try:
             sg.popup('Analyzing, this process will take a few minutes!',keep_on_top=True,
                      auto_close=True,auto_close_duration=5)
             print(function2())
             sg.popup('Mission Accomplished!',keep_on_top=True,title="DATAanalyte", 
             custom_text=("cancel"),image=ͼƬ9)
             window['-RESULT-'].update(disabled=False, button_color=('black','green'))
         except Exception as e:
             sg.popup(e)
    if event==' UVMAX ':
         try:
             sg.popup('Analyzing, this process will take a few minutes!',keep_on_top=True,
                      auto_close=True,auto_close_duration=5)
             print(function4())
             sg.popup('Mission Accomplished！',keep_on_top=True,title="DATAanalyte", 
             custom_text=("cancel"),image=ͼƬ9)
             window['-RESULT-'].update(disabled=False, button_color=('black','green'))
         except Exception as e:
             sg.popup(e)
    if event=='  MW   ':
         try:
             sg.popup('Analyzing, this process will take a few minutes!',keep_on_top=True,
                      auto_close=True,auto_close_duration=5)
             print(function4())
             sg.popup('Mission Accomplished!',keep_on_top=True,title="DATAanalyte", 
             custom_text=("cancel"),image=ͼƬ9)
             window['-RESULT-'].update(disabled=False, button_color=('black','green'))
         except Exception as e:
             sg.popup(e) 
    if event=='-RESULT-':
        window['-FRAME2-'].update(visible=False)
        window['-FRAME3-'].update(visible=True)  
        Similarity1=pd.read_excel("Similarity.xlsx",index=False)
        Similarity2=Similarity1.sort_values(by="Similarity", ascending=False)
        rank=Similarity2.iloc[:,0].tolist()
        Com_rank=list(map(lambda a:a+1,rank))
        Sim_rank=Similarity2.iloc[:,1]
        dict1=dict(zip(Com_rank,Sim_rank))#这里把化合物和相似度合并成字典。
        window['-SIM_LIST-'].update(Com_rank) 
        window['-RESULT_PLOT-'].update(filename=(r"./result_figure.png"))
    
    if event=='-SIM_LIST-':       
        window['-SCORE-'].update(dict1[values['-SIM_LIST-'][0]])
# =============================================================================
#         print(values['-SIM_LIST-'][0])
#         print(type(values['-SIM_LIST-'][0]))
# =============================================================================
        Num=values['-SIM_LIST-'][0]*2-2
        Hit_Result=pd.read_excel("hit.xlsx",index=False)
        explt_hit=Hit_Result.iloc[:,Num].tolist()
        lib_hit=Hit_Result.iloc[:,Num+1].tolist()
        window['-EXPLT_HIT-'].update(explt_hit)
        window['-LIB_HIT-'].update(lib_hit)
window.close()
